AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  These are the support APIs for the applied project, GEINE
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
      # AllowCredentials: true  Uncomment only if you choose a specific origin instead of the * wildcard.

Resources:

  GetAllProducts:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getAllProducts.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get products saved in the DB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: GET

  GetAllDeals:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getProductDeals.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get products deals saved in the DB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/deals
            Method: GET

  GetProductById:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getProductById.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get products by id
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/{id}
            Method: GET

  GetProductClasses:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getProductClasses.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get product classes
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/classes
            Method: GET

  GetProductTypesForClass:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getProductTypesForClass.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get product types for class
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/types/{class}
            Method: GET

  GetProductCategoriesForType:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getProductCategoriesForType.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get product categories for type
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/categories/{type}
            Method: GET

  GetProductsForCategory:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/getProductsForCategory.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get products for category
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/category/{category}
            Method: GET

  SearchProducts:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/searchProducts.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to search products saved in the DB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/search
            Method: GET

  CreateProduct:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/products/createProduct.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to create new products
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ProductsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: POST
  
  getAllShoppingLists:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/shopping-list/getAllShoppingLists.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to get shopping lists saved in the DB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ShoppingListsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ShoppingListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /shoppinglists
            Method: GET
  
  searchShoppingLists:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/shopping-list/searchShoppingLists.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to search shopping list by name
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ShoppingListsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ShoppingListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /shoppinglists/search
            Method: GET
  
  createShoppingList:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/shopping-list/createShoppingList.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to create new shopping list
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ShoppingListsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ShoppingListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /shoppinglists
            Method: POST

  CreateUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/users/createUser.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to create / register new users into the system
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /users
            Method: POST

  UpdateUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/users/updateUser.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to update a user in the system
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /users/update
            Method: POST

  LoginUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/users/loginUser.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Use this function to check and login the users into the system
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref UsersTable
          SIGN_KEY: AppliedProject2023
      Events:
        Api:
          Type: Api
          Properties:
            Path: /users/login
            Method: POST

  ProductsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ShoppingListsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
